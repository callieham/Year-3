x <-7
y <- 65
gamma?
The assumptions we must check are:
- The events are independent of each other
- Both events have the same standard deviation
- The events both follow a normal distribution
install.packages('tinytex')
install.packages("tinytex")
install.packagegs(knitr)
install.packages(knitr)
install.packages('knitr')
install.packages("knitr")
install.packages("knitr")
install.packages("tinytex")
install.packages("knitr")
install.packages("knitr")
install.packages("kable")
updateR()
updater()
install.packages("devtools")
install.packages("devtools")
install.packages("kable")
install.packages("knitr")
install.packages("knitr")
library("dplyr")
library("BradleyTerry2")
library("formattable")
library("Metrics")
install.packages("BradleyTerry2")
install.packages("dplyr")
install.packages("formattable")
install.packages("Metrics")
library("dplyr")
library("BradleyTerry2")
library("formattable")
library("Metrics")
y19 <- read.csv("wta_matches_2019.csv")
y20 <- read.csv("wta_matches_2020.csv")
y21 <- read.csv("wta_matches_2021.csv")
y22 <- read.csv("wta_matches_2022.csv")
y22 <- y22 %>% filter(tourney_name == "Sydney")
y3 <- rbind(y19, y20, y21, y22)
y3n <- y3 %>% filter(winner_rank %in% 1:500)
y3nn <- y3n %>% filter(loser_rank %in% 1:500)
contingency_table <- table(y3nn$winner_name, y3nn$loser_name)
winloss <- countsToBinomial(contingency_table)
model <- BTm(cbind(win1, win2), player1, player2, id = "player", data = winloss)
parameter_values <- coef(model)
y19n <- y19 %>% filter(winner_rank %in% 1:500)
y19nn <- y19n %>% filter(loser_rank %in% 1:500)
w3 <- rep(0.5, nrow(y19nn))
y19w <- transform(y19nn, weight = w3)
y20n <- y20 %>% filter(winner_rank %in% 1:500)
y20nn <- y20n %>% filter(loser_rank %in% 1:500)
w4 <- rep(0.707, nrow(y20nn))
y20w <- transform(y20nn, weight = w4)
y21n <- y21 %>% filter(winner_rank %in% 1:500)
y21nn <- y21n %>% filter(loser_rank %in% 1:500)
w5 <- rep(1, nrow(y21nn))
y21w <- transform(y21nn, weight = w5)
y22n <- y22 %>% filter(winner_rank %in% 1:500)
y22nn <- y22n %>% filter(loser_rank %in% 1:500)
w6 <- rep(1, nrow(y22nn))
y22w <- transform(y22nn, weight = w6)
y3w <- rbind(y19w, y20w, y21w, y22w)
fin <- y3w %>% filter(round %in% c("F"))
fin$weight <- fin$weight * 10
f <- y3w %>% filter(round %in% c("SF", "QF"))
f$weight <- f$weight * 8
r1 <- y3w %>% filter(round %in% c("R16", "R32"))
r1$weight <- r1$weight * 5
other <- y3w %>% filter(!(round %in% c("F", "SF", "QF", "R16", "R32")))
y3w <- rbind(fin, f, r1, other)
c <- y3w %>% filter(surface == "Clay")
c$weight <- c$weight * 10
g <- y3w %>% filter(surface == "Grass")
g$weight <- g$weight * 1
h <- y3w %>% filter(surface == "Hard")
h$weight <- h$weight * 10
y3w <- rbind(c, h, g)
y3w4 <- y3w[c("winner_name", "loser_name", "weight")]
weighted_counts <- y3w4 %>%
group_by(winner_name, loser_name) %>%
summarise(weighted_count = sum(weight), .groups = "drop")
cont_table <- xtabs(weighted_count ~ winner_name + loser_name, data = weighted_counts)
wl <- countsToBinomial(cont_table)
model2 <- BTm(cbind(win1, win2), player1, player2, id = "player", data = wl)
parameter_values2 <- coef(model2)
test_data22 <- read.csv("wta_matches_2022.csv")
test_data22 <- test_data22 %>% filter(tourney_name == "Australian Open")
test_table <- table(test_data22$winner_name, test_data22$loser_name)
test_winloss <- countsToBinomial(test_table)
predictions <- predict(model, newdata = test_winloss, type = "response", na.action = na.exclude)
correct_predictions <- sum(ifelse(predictions > 0.5, test_winloss$win1, test_winloss$win2))
accuracy_aus <- correct_predictions / sum(test_winloss$win1, test_winloss$win2)
predictions2 <- predict(model2, newdata = test_winloss, type = "response", na.action = na.exclude)
correct_predictions2 <- sum(ifelse(predictions2 > 0.5, test_winloss$win1, test_winloss$win2))
accuracy_aus2 <- correct_predictions2 / sum(test_winloss$win1, test_winloss$win2)
abilities_aus <- BTabilities(model = model)
abilities_aus2 <- BTabilities(model = model2)
p <- predictions2
y <- ifelse(predictions2 > 0.5, test_winloss$win1, test_winloss$win2)
loglikelihood <- sum(y*log(p) + (1-y)*log(1-p))
bcel_aus <- -loglikelihood/length(p)
rmse_aus <- rmse(p, y)
View(abilities_aus2)
View(abilities_aus)
library(tidyverse)
bgs <- read.csv("", show_col_types = FALSE)
getwd()
setwd("/Users/calam/Desktop/Year3/AppliedStatsInference")
knitr::opts_chunk$set(echo = TRUE)
library(bookdown)
getwd()
getwd()
getwd()
setwd()
setwd("/Users/calam")
setwd("/Users/calam/Desktop/Year 3/Applied Stats Inference/asi-tutorial-0-bgs.Rmd")
openwd("/Users/calam/Desktop/Year 3/Applied Stats Inference/asi-tutorial-0-bgs.Rmd")
setwd("~/Desktop/Year 3/Applied Stats Inference")
knitr::opts_chunk$set(echo = TRUE)
library(bookdown)
knitr::opts_chunk$set(echo = TRUE)
library(bookdown)
library(tidyverse)
bgs <- read_csv("/Users/calam/Desktop/Year 3/Applied Stats Inference/BGS Database Search Results.html",
show_col_types = FALSE)
View()
View(bgas)
View(bgs)
bgs$dt <- as.POSIXct(paste(bgs$`yyyy-mm-dd`,
bgs$`hh:mm:ss.ss`),
format = "%Y-%m-%d %H:%M:%S")
library(tidyverse)
bgs <- read_csv("/Users/calam/Desktop/Year 3/Applied Stats Inference/BGS Database Search Results.html")
View(bgs)
problems(bgs)
bgs <- bgs - c(1, 2)
bgs - c(1, 2)
bgs <- bgs[-c(1,2)]
bgs <- bgs[-c(1,2),]
bgs <- read_csv("/Users/calam/Desktop/Year 3/Applied Stats Inference/BGS Database Search Results.html")
bgs <- read_csv("/Users/calam/Desktop/Year 3/Applied Stats Inference/BGS Database Search Results.html")
View(bgs)
bgs <- read_csv("/Users/calam/Desktop/Year 3/Applied Stats Inference/BGS Database Search Results.html")
bgs <- read_csv("/Users/calam/Desktop/Year 3/Applied Stats Inference/BGS Database Search Results.mht")
View(bgs)
library(tidyverse)
bgs <- read_csv("/Users/calam/Desktop/Year 3/Applied Stats Inference/BGS Database Search Results.html")
View(bgs)
library(tidyverse)
bgs <- read_csv("/Users/calam/Desktop/Year 3/Applied Stats Inference/BGS Database Search Results.html")
View(bgs)
bgs <- read_csv("/Users/calam/Desktop/Year 3/Applied Stats Inference/BGS Database Search Results.html")
View(bgs)
knitr::opts_chunk$set(echo = TRUE)
library(bookdown)
library(tidyverse)
bgs <- read_csv("/Users/calam/Desktop/Year 3/Applied Stats Inference/BGS Database Search Results.html")
View(bgs)
library(tidyverse)
bgs <- read.csv("/Users/calam/Desktop/Year 3/Applied Stats Inference/BGS Database Search Results.html")
library(tidyverse)
bgs <- read.csv("/Users/calam/Desktop/Year 3/Applied Stats Inference/BGS-Database-Search-Results.csv")
View(bgs)
library(tidyverse)
bgs <- read.csv("/Users/calam/Desktop/Year 3/Applied Stats Inference/BGS-Database-Search-Results.csv", header = TRUE)
library(tidyverse)
bgs <- read_csv("/Users/calam/Desktop/Year 3/Applied Stats Inference/BGS-Database-Search-Results.csv", header = TRUE)
library(tidyverse)
bgs <- read_csv("/Users/calam/Desktop/Year 3/Applied Stats Inference/BGS-Database-Search-Results.csv", show_col_types = FALSE)
bgs$dt <- as.POSIXct(paste(bgs$`yyyy-mm-dd`,
bgs$`hh:mm:ss.ss`),
format = "%Y-%m-%d %H:%M:%S")
View(bgs)
library(tidyverse)
bgs <- read_csv("/Users/calam/Desktop/Year 3/Applied Stats Inference/BGS-Database-Search-Results.csv", show_col_types = FALSE)
library('tidyverse')
library(tidyverse)
bgs <- read_csv("/Users/calam/Desktop/Year 3/Applied Stats Inference/BGS-Database-Search-Results.csv", show_col_types = FALSE)
